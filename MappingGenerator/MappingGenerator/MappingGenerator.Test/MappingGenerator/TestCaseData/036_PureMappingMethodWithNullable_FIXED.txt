#nullable enable
using System;
using System.Collections.Generic;
using System.Text;
using System.Collections.ObjectModel;
using System.Collections.Immutable;

namespace MappingGenerator.Test.MappingGenerator.TestCaseData
{
    public class TestMapper
    {
        public static UserDTO Map(UserEntity entity)
        {
            return new UserDTO()
            {
                Id = entity.Id,
                FirstName = entity.FirstName,
                MiddleName = entity.MiddleName,
                LastName = entity.LastName,
                Age = entity.Age,
                Account = entity.Account != null ? new AccountDTO()
                {
                    BankName = entity.Account.BankName,
                    Number = entity.Account.Number
                } : null,
                Account2 = entity.Account2 != null ? new AccountDTO()
                {
                    BankName = entity.Account2.BankName,
                    Number = entity.Account2.Number
                } : throw new System.ArgumentNullException("entity.Account2", "The value of 'entity.Account2' should not be null"),
                Debs = entity.Debs?.ConvertAll(entityDeb => new AccountDTO()
                {
                    BankName = entityDeb.BankName,
                    Number = entityDeb.Number
                }),
                Debs2 = entity.Debs2 != null ? entity.Debs2.ConvertAll(entityDebs2 => new AccountDTO()
                {
                    BankName = entityDebs2.BankName,
                    Number = entityDebs2.Number
                }) : throw new System.ArgumentNullException("entity.Debs2", "The value of 'entity.Debs2' should not be null")
            };
        }
    }

    public class UserDTO
    {
        public int Id {get; set;}
        public string FirstName { get; set; }
        public string? MiddleName { get; set; }
        public string LastName { get; set; }
        public int Age { get; set; }
        public AccountDTO? Account { get; set; }
        public AccountDTO Account2 { get; set; }
        public List<AccountDTO>? Debs { get; set; }
        public List<AccountDTO> Debs2 { get; set; }
    }

    public class AccountDTO
    {
        public string BankName { get; set; }
        public string Number { get; set; }
    }

    //---- Entities

    public class UserEntity
    {
        public int Id {get; set;}
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string? MiddleName { get; set; }
        public int Age { get; set; }
        public AccountEntity? Account { get; set; }
        public AccountEntity? Account2 { get; set; }
        public List<AccountEntity>? Debs { get; set; }
        public List<AccountEntity>? Debs2 { get; set; }
    }

    public class AccountEntity
    {
        public string BankName { get; set; }
        public string Number { get; set; }
    }
}